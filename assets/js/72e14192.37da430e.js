"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[239],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=r,d=p["".concat(o,".").concat(f)]||p[f]||m[f]||i;return n?a.createElement(d,l(l({ref:t},u),{},{components:n})):a.createElement(d,l({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4181:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],s={sidebar_position:1},o="Quick start",c={unversionedId:"quick-start",id:"quick-start",title:"Quick start",description:"fseval helps you benchmark Feature Selection and Feature Ranking algorithms. Any algorithm that ranks features in importance.",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/fseval/docs/quick-start",editUrl:"https://github.com/dunnkers/fseval/tree/website/docs/quick-start.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"The pipeline",permalink:"/fseval/docs/the-pipeline"}},u=[{value:"Getting started",id:"getting-started",children:[{value:"Configuring a benchmark",id:"configuring-a-benchmark",children:[],level:3},{value:"Running the benchmark",id:"running-the-benchmark",children:[],level:3},{value:"Results",id:"results",children:[],level:3}],level:2}],m={toc:u};function p(e){var t=e.components,s=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start"},"Quick start"),(0,i.kt)("p",null,"fseval helps you benchmark ",(0,i.kt)("strong",{parentName:"p"},"Feature Selection")," and ",(0,i.kt)("strong",{parentName:"p"},"Feature Ranking")," algorithms. Any algorithm that ranks features in importance."),(0,i.kt)("p",null,"It comes useful if you are one of the following types of users:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Feature Selection algorithm authors"),". You are the author of a novel Feature Selection algorithm. Now, you have to prove the performance of your algorithm against other competitors. Therefore, you are going to run a large-scale benchmark. Many authors, however, spend much time rewriting similar pipelines to benchmark their algorithms. fseval helps you run benchmarks in a structured manner, on supercomputer clusters or on the cloud."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Feature Ranker algorithm authors"),". fseval sees Feature Selection as a form of Feature Ranking, so can handle both scenarios."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Interpretable AI method authors"),". You wrote a new Interpretable AI method that aims to find out which features are most meaningful by ranking them. Now, the challenge is to find out how well your method ranked those features. fseval can help with this."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("strong",{parentName:"li"},"Machine Learning practitioners"),". You have a dataset and want to find out with exactly what features your models will perform best. You can use fseval to try multiple Feature Selection or Feature Ranking algorithms.")),(0,i.kt)("p",null,"Key features \ud83d\ude80:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"..."),(0,i.kt)("li",{parentName:"ul"},"..."),(0,i.kt)("li",{parentName:"ul"},"..."),(0,i.kt)("li",{parentName:"ul"},"..."),(0,i.kt)("li",{parentName:"ul"},"...")),(0,i.kt)("h2",{id:"getting-started"},"Getting started"),(0,i.kt)("p",null,"Install fseval:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"pip install fseval\n")),(0,i.kt)("h3",{id:"configuring-a-benchmark"},"Configuring a benchmark"),(0,i.kt)("p",null,"Given the following ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dunnkers/fseval/tree/master/examples/quick-start"},"configuration"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ tree\n.\n\u251c\u2500\u2500 benchmark.py\n\u2514\u2500\u2500 conf\n    \u251c\u2500\u2500 my_config.yaml\n    \u251c\u2500\u2500 dataset\n    \u2502   \u2514\u2500\u2500 synthetic.yaml\n    \u251c\u2500\u2500 ranker\n    \u2502   \u251c\u2500\u2500 anova.yaml\n    \u2502   \u2514\u2500\u2500 mutual_info.yaml\n    \u2514\u2500\u2500 validator\n        \u2514\u2500\u2500 knn.yaml\n\n4 directories, 5 files\n")),(0,i.kt)("div",{className:"row"},(0,i.kt)("div",{className:"col col--5"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/my_config.yaml"',title:'"conf/my_config.yaml"'},"defaults:\n  - _self_\n  - base_pipeline_config\n  - override dataset: synthetic\n  - override validator: knn\n  - override /callbacks:\n      - to_sql\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/dataset/synthetic.yaml"',title:'"conf/dataset/synthetic.yaml"'},"name: My synthetic dataset\ntask: classification\nadapter:\n  _target_: sklearn.datasets.make_classification\n  n_samples: 10000\n  n_informative: 2\n  n_classes: 2\n  n_features: 20\n  n_redundant: 0\n  random_state: 0\n  shuffle: false\nfeature_importances:\n  X[:, 0:2]: 1.0\n"))),(0,i.kt)("div",{className:"col col--7"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/ranker/anova.yaml"',title:'"conf/ranker/anova.yaml"'},"name: ANOVA F-value\nestimator:\n  _target_: benchmark.ANOVAFValueClassifier\n_estimator_type: classifier\nestimates_feature_importances: true\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/ranker/mutual_info.yaml"',title:'"conf/ranker/mutual_info.yaml"'},"name: Mutual Info\nestimator:\n  _target_: benchmark.MutualInfoClassifier\n_estimator_type: classifier\nmultioutput: false\nestimates_feature_importances: true\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/validator/knn.yaml"',title:'"conf/validator/knn.yaml"'},"name: k-NN\nestimator:\n  _target_: sklearn.neighbors.KNeighborsClassifier\n_estimator_type: classifier\nmultioutput: false\nestimates_target: true\n")))),(0,i.kt)("p",null,"And the file ",(0,i.kt)("inlineCode",{parentName:"p"},"benchmark.py"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="benchmark.py"',title:'"benchmark.py"'},'import hydra\nfrom fseval.config import PipelineConfig\nfrom fseval.main import run_pipeline\nfrom sklearn.base import BaseEstimator\nfrom sklearn.feature_selection import f_classif, mutual_info_classif\n\n\nclass ANOVAFValueClassifier(BaseEstimator):\n    def fit(self, X, y):\n        scores, _ = f_classif(X, y)\n        self.feature_importances_ = scores\n\n\nclass MutualInfoClassifier(BaseEstimator):\n    def fit(self, X, y):\n        scores = mutual_info_classif(X, y)\n        self.feature_importances_ = scores\n\n\n@hydra.main(config_path="conf", config_name="my_config")\ndef main(cfg: PipelineConfig) -> None:\n    run_pipeline(cfg)\n\n\nif __name__ == "__main__":\n    main()\n')),(0,i.kt)("h3",{id:"running-the-benchmark"},"Running the benchmark"),(0,i.kt)("p",null,"We can then run a benchmark like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"python benchmark.py --multirun ranker='glob(*)'\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Locale Dropdown",src:n(710).Z})),(0,i.kt)("h3",{id:"results"},"Results"),(0,i.kt)("p",null,"The data is stored in a SQLite database:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"database",src:n(1775).Z})),(0,i.kt)("p",null,"We can open the data using ",(0,i.kt)("a",{parentName:"p",href:"https://sqlitebrowser.org/"},"DB Browser for SQLite")," The experiment config is stored in the ",(0,i.kt)("inlineCode",{parentName:"p"},"experiments")," table:\n",(0,i.kt)("img",{alt:"experiments table",src:n(1868).Z})),(0,i.kt)("p",null,"We can access the validation scores in the ",(0,i.kt)("inlineCode",{parentName:"p"},"validation_scores")," table:\n",(0,i.kt)("img",{alt:"validation data",src:n(9979).Z})),(0,i.kt)("p",null,"This way, we can easily compare two feature selectors: ANOVA F Value and Mutual Info \u2728."))}p.isMDXComponent=!0},1775:function(e,t,n){t.Z=n.p+"assets/images/database_file-6b66cb4296cbcb94ee0e16ea40d14a66.png"},1868:function(e,t,n){t.Z=n.p+"assets/images/experiments_data-8f4f707167c870e0822f662d0eb60858.png"},710:function(e,t,n){t.Z=n.p+"assets/images/terminal-c323ab36fa8d396727d7f72489523e6f.svg"},9979:function(e,t,n){t.Z=n.p+"assets/images/validation_data-d5d133032d0b8015f46b08ad323dca2a.png"}}]);