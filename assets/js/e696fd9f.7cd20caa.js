"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[682],{8215:function(e,t,a){var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},6396:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(7462),r=a(7294),i=a(2389),o=a(9443);var s=function(){var e=(0,r.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=a(3616),u=a(6010),m="tabItem_vU9c";function p(e){var t,a,i,o=e.lazy,p=e.block,c=e.defaultValue,f=e.values,d=e.groupId,g=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=f?f:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,l.lx)(h,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===c?c:null!=(t=null!=c?c:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(i=k[0])?void 0:i.props.value;if(null!==N&&!h.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var _=s(),v=_.tabGroupChoices,y=_.setTabGroupChoices,C=(0,r.useState)(N),E=C[0],T=C[1],x=[],w=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var I=v[d];null!=I&&I!==E&&h.some((function(e){return e.value===I}))&&T(I)}var S=function(e){var t=e.currentTarget,a=x.indexOf(t),n=h[a].value;n!==E&&(w(t),T(n),null!=d&&y(d,n))},F=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=x.indexOf(e.currentTarget)+1;a=x[n]||x[0];break;case"ArrowLeft":var r=x.indexOf(e.currentTarget)-1;a=x[r]||x[x.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":p},g)},h.map((function(e){var t=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return x.push(e)},onKeyDown:F,onFocus:S,onClick:S},i,{className:(0,u.Z)("tabs__item",m,null==i?void 0:i.className,{"tabs__item--active":E===t})}),null!=a?a:t)}))),o?(0,r.cloneElement)(k.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function c(e){var t=(0,i.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},501:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return u},contentTitle:function(){return m},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),o=a(6396),s=a(8215),l=(a(9055),["components"]),u={sidebar_position:6,title:"fseval.config.EstimatorConfig"},m="EstimatorConfig",p={unversionedId:"config/EstimatorConfig",id:"config/EstimatorConfig",title:"fseval.config.EstimatorConfig",description:"Configures an estimator: a Feature Ranker, Feature Selector or a validation",source:"@site/docs/config/EstimatorConfig.mdx",sourceDirName:"config",slug:"/config/EstimatorConfig",permalink:"/fseval/docs/config/EstimatorConfig",editUrl:"https://github.com/dunnkers/fseval/tree/website/docs/config/EstimatorConfig.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"fseval.config.EstimatorConfig"},sidebar:"tutorialSidebar",previous:{title:"fseval.config.ResampleConfig",permalink:"/fseval/docs/config/ResampleConfig"},next:{title:"fseval.config.StorageConfig",permalink:"/fseval/docs/config/StorageConfig"}},c=[{value:"Examples",id:"examples",children:[],level:2}],f={toc:c};function d(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"estimatorconfig"},"EstimatorConfig"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class fseval.config.EstimatorConfig(\n    name: str=MISSING, \n    estimator: Any=None, \n    load_cache: Optional[CacheUsage]=CacheUsage.allow, \n    save_cache: Optional[CacheUsage]=CacheUsage.allow, \n    _estimator_type: str=MISSING, \n    multioutput: bool=False, \n    multioutput_only: bool=False, \n    requires_positive_X: bool=False, \n    estimates_feature_importances: bool=False, \n    estimates_feature_support: bool=False, \n    estimates_feature_ranking: bool=False, \n    estimates_target: bool=False,\n)\n")),(0,i.kt)("p",null,"Configures an estimator: a Feature Ranker, Feature Selector or a validation\nestimator."),(0,i.kt)("p",null,"In the case of Feature Rankers/Selectors, set one of\n",(0,i.kt)("inlineCode",{parentName:"p"},"estimates_feature_importances"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"estimates_feature_support")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"estimates_feature_ranking")," to True. In the case of a validation estimator,\nset ",(0,i.kt)("inlineCode",{parentName:"p"},"estimates_target")," to True."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"name")," : str"),(0,i.kt)("td",{parentName:"tr",align:null},"Human-friendly name of this estimator.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"estimator")," : Any"),(0,i.kt)("td",{parentName:"tr",align:null},"The estimator. Must be a dictionary with a key ",(0,i.kt)("inlineCode",{parentName:"td"},"_target_"),", pointing to the class that is to be instantiated. All other properties in the dictionary will be passed to the estimator constructor. e.g")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"load_cache")," : Optional[",(0,i.kt)("a",{parentName:"td",href:"../../types/CacheUsage"},"CacheUsage"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"How to handle loading a cached version of the estimator, in a pickle file. e.g. to ignore cache, or force using it. To be used in combination with ",(0,i.kt)("inlineCode",{parentName:"td"},"PipelineConfig.storage"),". See ",(0,i.kt)("a",{parentName:"td",href:"../../types/CacheUsage"},"CacheUsage"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"save_cache")," : Optional[",(0,i.kt)("a",{parentName:"td",href:"../../types/CacheUsage"},"CacheUsage"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"How to handle saving the fit estimator as a pickle file, such to facilitate caching. To be used in combination with ",(0,i.kt)("inlineCode",{parentName:"td"},"PipelineConfig.storage"),". See ",(0,i.kt)("a",{parentName:"td",href:"../../types/CacheUsage"},"CacheUsage"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"_estimator_type")," : str"),(0,i.kt)("td",{parentName:"tr",align:null},"Either 'classifier', 'regressor' or 'clusterer'. See the ",(0,i.kt)("a",{parentName:"td",href:"https://scikit-learn.org/stable/developers/develop.html#estimator-types"},"sklearn"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"multioutput")," : bool"),(0,i.kt)("td",{parentName:"tr",align:null},"Whether this estimator supports multioutput datasets.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"multioutput_only")," : bool"),(0,i.kt)("td",{parentName:"tr",align:null},"If this estimator ",(0,i.kt)("strong",{parentName:"td"},"only")," supports multioutput datasets.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"requires_positive_X")," : bool"),(0,i.kt)("td",{parentName:"tr",align:null},"Whether the estimator fails if X contains negative values.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"estimates_feature_importances")," : bool"),(0,i.kt)("td",{parentName:"tr",align:null},"Whether the estimator estimates feature importances. For example, in the case of 2 features, the estimator can set ",(0,i.kt)("inlineCode",{parentName:"td"},"self.feature_importances_ = [0.9, 0.1]"),", implying the estimator found the first feature the most useful. Alternatively, the ",(0,i.kt)("inlineCode",{parentName:"td"},"coef_")," attribute can also be read and interpreted as a feature importance vector.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"estimates_feature_support")," : bool"),(0,i.kt)("td",{parentName:"tr",align:null},"Whether the estimator estimates feature support. A feature support vector indicates which features to include in a feature subset yes/no. In other words, it must be a boolean vector. It is to be set on the estimator ",(0,i.kt)("inlineCode",{parentName:"td"},"support_")," attribute. Estimating the feature support ",(0,i.kt)("inlineCode",{parentName:"td"},"vector")," : s synonymous with performing feature selection. e.g ",(0,i.kt)("inlineCode",{parentName:"td"},"self.support_ = [True, False]"),", meaning to include only the first feature in a feature subset.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"estimates_feature_ranking")," : bool"),(0,i.kt)("td",{parentName:"tr",align:null},"Whether the estimator ranks the features in a specific order. Is similar to feature importance, but does not estimate exact importance quantities, i.e. that are proportional to each other. An ",(0,i.kt)("inlineCode",{parentName:"td"},"estimator")," : an set the ranking using the ",(0,i.kt)("inlineCode",{parentName:"td"},"ranking_")," attribute. e.g ",(0,i.kt)("inlineCode",{parentName:"td"},"self.ranking_ = [1, 0]"),", such to indicate that the first feature ranks the highest.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Example config for ReliefF feature selection using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/EpistasisLab/scikit-rebate"},"skrebate"),":"),(0,i.kt)(o.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/ranker/relieff.yaml"',title:'"conf/ranker/relieff.yaml"'},"name: ReliefF\nestimator:\n  _target_: skrebate.ReliefF\n_estimator_type: classifier\nestimates_feature_importances: true\n"))),(0,i.kt)(s.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\nfrom fseval.config import EstimatorConfig\n\ncs = ConfigStore.instance()\n\nrelieff = EstimatorConfig(\n    name="ReliefF",\n    estimator=dict(\n        _target_="skrebate.ReliefF"\n    ),\n    _estimator_type="classifier",\n    estimates_feature_importances=True,\n)\ncs.store(group="ranker", name="relieff", node=relieff)\n')))),(0,i.kt)("p",null,"Example config for Boruta using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/scikit-learn-contrib/boruta_py"},"boruta_py"),":"),(0,i.kt)(o.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/ranker/boruta.yaml"',title:'"conf/ranker/boruta.yaml"'},"name: Boruta\nestimator:\n  _target_: boruta.boruta_py.BorutaPy\n  estimator:\n    _target_: sklearn.ensemble.RandomForestClassifier\n  n_estimators: auto\n_estimator_type: classifier\nmultioutput: false\nestimates_feature_importances: false\nestimates_feature_support: true\nestimates_feature_ranking: true\n"))),(0,i.kt)(s.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\nfrom fseval.config import EstimatorConfig\n\ncs = ConfigStore.instance()\n\nboruta = EstimatorConfig(\n    name="Boruta",\n    estimator=dict(\n        _target_="boruta.boruta_py.BorutaPy",\n        estimator=dict(\n            _target_="sklearn.ensemble.RandomForestClassifier"\n        ),\n        n_estimators="auto"\n    ),\n    _estimator_type="classifier",\n    multioutput=False,\n    estimates_feature_importances=False,\n    estimates_feature_support=True,\n    estimates_feature_ranking=True,\n)\ncs.store(group="ranker", name="boruta", node=boruta)\n')))),(0,i.kt)("p",null,"Example config for a validation estimator, e.g. ",(0,i.kt)("a",{parentName:"p",href:"https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html"},"k-NN"),":"),(0,i.kt)(o.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/validator/knn.yaml"',title:'"conf/validator/knn.yaml"'},"name: k-NN\nestimator:\n  _target_: sklearn.neighbors.KNeighborsClassifier\n_estimator_type: classifier\nmultioutput: false\nestimates_target: true\n"))),(0,i.kt)(s.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\nfrom fseval.config import EstimatorConfig\n\ncs = ConfigStore.instance()\n\nknn = EstimatorConfig(\n    name="k-NN",\n    estimator=dict(\n        _target_="sklearn.neighbors.KNeighborsClassifier",\n    ),\n    _estimator_type="classifier",\n    multioutput=False,\n    estimates_target=True,\n)\ncs.store(group="ranker", name="knn", node=knn)\n')))),(0,i.kt)("p",null,"\u2192 See more example definitions of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dunnkers/fseval/tree/master/tests/integration/conf/ranker"},"rankers")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dunnkers/fseval/tree/master/tests/integration/conf/validator"},"validators")," in the repository."))}d.isMDXComponent=!0}}]);