"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[322],{8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:l},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(7462),l=n(7294),i=n(2389),r=n(9443);var o=function(){var e=(0,l.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=n(3616),u=n(6010),d="tabItem_vU9c";function c(e){var t,n,i,r=e.lazy,c=e.block,p=e.defaultValue,m=e.values,f=e.groupId,v=e.className,k=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=m?m:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),h=(0,s.lx)(g,(function(e,t){return e.value===t.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===p?p:null!=(t=null!=p?p:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=k[0])?void 0:i.props.value;if(null!==b&&!g.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var C=o(),N=C.tabGroupChoices,y=C.setTabGroupChoices,_=(0,l.useState)(b),V=_[0],T=_[1],w=[],x=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var E=N[f];null!=E&&E!==V&&g.some((function(e){return e.value===E}))&&T(E)}var S=function(e){var t=e.currentTarget,n=w.indexOf(t),a=g[n].value;a!==V&&(x(t),T(a),null!=f&&y(f,a))},O=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=w.indexOf(e.currentTarget)+1;n=w[a]||w[0];break;case"ArrowLeft":var l=w.indexOf(e.currentTarget)-1;n=w[l]||w[w.length-1]}null==(t=n)||t.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":c},v)},g.map((function(e){var t=e.value,n=e.label,i=e.attributes;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:V===t?0:-1,"aria-selected":V===t,key:t,ref:function(e){return w.push(e)},onKeyDown:O,onFocus:S,onClick:S},i,{className:(0,u.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":V===t})}),null!=n?n:t)}))),r?(0,l.cloneElement)(k.filter((function(e){return e.props.value===V}))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==V})}))))}function p(e){var t=(0,i.Z)();return l.createElement(c,(0,a.Z)({key:String(t)},e))}},9874:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return p},default:function(){return f}});var a=n(7462),l=n(3366),i=(n(7294),n(3905)),r=n(6396),o=n(8215),s=(n(9055),["components"]),u={sidebar_position:4,title:"fseval.config.CrossValidatorConfig"},d="CrossValidatorConfig",c={unversionedId:"config/CrossValidatorConfig",id:"config/CrossValidatorConfig",title:"fseval.config.CrossValidatorConfig",description:"Cross Validation is used to improve the reliability of the ranking and validation results. A CV method can be defined like so:",source:"@site/docs/config/CrossValidatorConfig.mdx",sourceDirName:"config",slug:"/config/CrossValidatorConfig",permalink:"/fseval/docs/config/CrossValidatorConfig",editUrl:"https://github.com/dunnkers/fseval/tree/website/docs/config/CrossValidatorConfig.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"fseval.config.CrossValidatorConfig"},sidebar:"tutorialSidebar",previous:{title:"fseval.config.DatasetConfig",permalink:"/fseval/docs/config/DatasetConfig"},next:{title:"fseval.config.ResampleConfig",permalink:"/fseval/docs/config/ResampleConfig"}},p=[{value:"Available CV methods",id:"available-cv-methods",children:[{value:"K-Fold CV",id:"k-fold-cv",children:[],level:3},{value:"Train/test split",id:"traintest-split",children:[],level:3},{value:"\u2699\ufe0f Custom CV",id:"\ufe0f-custom-cv",children:[],level:3}],level:2}],m={toc:p};function f(e){var t=e.components,n=(0,l.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"crossvalidatorconfig"},"CrossValidatorConfig"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class fseval.config.CrossValidatorConfig(\n    name: str=MISSING, \n    splitter: Any=None, \n    fold: int=0,\n)\n")),(0,i.kt)("p",null,"Cross Validation is used to improve the reliability of the ranking and validation results. A CV method can be defined like so:"),(0,i.kt)("p",null,"Provides an interface as how to define a Cross Validation method. The CV is applied\nat the beginning of the pipeline, so both the ranker and validator only get to see\nthe ",(0,i.kt)("strong",{parentName:"p"},"training")," dataset. The test dataset is used for scoring, i.e. for determining\nthe validation estimator scores."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"name")," : str"),(0,i.kt)("td",{parentName:"tr",align:null},"Human-friendly name for this CV method.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"splitter")," : Any"),(0,i.kt)("td",{parentName:"tr",align:null},"The cross validation splitter function. Must contain a ",(0,i.kt)("inlineCode",{parentName:"td"},"_target_")," attribute which instantiates to an object that has a ",(0,i.kt)("inlineCode",{parentName:"td"},"split")," method with the following signature ",(0,i.kt)("inlineCode",{parentName:"td"},"def split(self, X, y=None, groups=None)"),". See ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/scikit-learn/scikit-learn/blob/main/sklearn/model_selection/_split.py#L60"},"BaseCrossValidator")," and ",(0,i.kt)("a",{parentName:"td",href:"https://github.com/scikit-learn/scikit-learn/blob/main/sklearn/model_selection/_split.py#L1573"},"BaseShuffleSplit"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"fold")," : int"),(0,i.kt)("td",{parentName:"tr",align:null},"The fold to use in this specific run of the pipeline. e.g. you can use ",(0,i.kt)("inlineCode",{parentName:"td"},"python my_benchmark.py --multirun cv=kfold cv.splitter.n_spits=5 cv.fold=range(0,5)")," to run a complete 5-fold CV scheme.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null})))),(0,i.kt)("h2",{id:"available-cv-methods"},"Available CV methods"),(0,i.kt)("p",null,"Built-in to fseval are ",(0,i.kt)("inlineCode",{parentName:"p"},"kfold")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"train_test_split"),"."),(0,i.kt)("h3",{id:"k-fold-cv"},"K-Fold CV"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"cv=kfold")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/kfold.yaml"',title:'"conf/cv/kfold.yaml"'},"name: K-Fold\nsplitter:\n  _target_: sklearn.model_selection.KFold\n  n_splits: 5\n  shuffle: True\n  random_state: 0\n")),(0,i.kt)("p",null,"For example: to use 10-fold CV, set ",(0,i.kt)("inlineCode",{parentName:"p"},"cv.splitter.n_splits=10"),"."),(0,i.kt)("h3",{id:"traintest-split"},"Train/test split"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"cv=train_test_split")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/train_test_split.yaml"',title:'"conf/cv/train_test_split.yaml"'},"name: Train/test split\nsplitter:\n  _target_: sklearn.model_selection.ShuffleSplit\n  n_splits: 1\n  test_size: 0.25\n  random_state: 0\n")),(0,i.kt)("h3",{id:"\ufe0f-custom-cv"},"\u2699\ufe0f Custom CV"),(0,i.kt)("p",null,"For example, we can implement Leave One Out cross validation like so:"),(0,i.kt)(r.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/loocv.yaml"',title:'"conf/cv/loocv.yaml"'},"name: Leave One Out\nsplitter:\n    _target_: sklearn.model_selection.LeaveOneOut\n"))),(0,i.kt)(o.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\n\nloocv = CrossValidatorConfig(\n    name="Leave One Out",\n    splitter=dict(\n        _target_="sklearn.model_selection.LeaveOneOut",\n    )\n)\n\ncs = ConfigStore.instance()\ncs.store(name="loocv", node=loocv, group="cv")\n')))),(0,i.kt)("p",null,"Which can then be used by setting ",(0,i.kt)("inlineCode",{parentName:"p"},"cv=loocv")," in the commandline."))}f.isMDXComponent=!0}}]);