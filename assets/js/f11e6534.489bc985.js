"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[137],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),f=a,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},6396:function(e,t,n){n.d(t,{Z:function(){return p}});var r=n(7462),a=n(7294),o=n(2389),i=n(9443);var l=function(){var e=(0,a.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=n(3616),u=n(6010),c="tabItem_vU9c";function d(e){var t,n,o,i=e.lazy,d=e.block,p=e.defaultValue,f=e.values,m=e.groupId,v=e.className,g=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=f?f:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,s.lx)(h,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===p?p:null!=(t=null!=p?p:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(o=g[0])?void 0:o.props.value;if(null!==y&&!h.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var k=l(),C=k.tabGroupChoices,_=k.setTabGroupChoices,O=(0,a.useState)(y),w=O[0],x=O[1],N=[],T=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var E=C[m];null!=E&&E!==w&&h.some((function(e){return e.value===E}))&&x(E)}var V=function(e){var t=e.currentTarget,n=N.indexOf(t),r=h[n].value;r!==w&&(T(t),x(r),null!=m&&_(m,r))},j=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=N.indexOf(e.currentTarget)+1;n=N[r]||N[0];break;case"ArrowLeft":var a=N.indexOf(e.currentTarget)-1;n=N[a]||N[N.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.Z)("tabs",{"tabs--block":d},v)},h.map((function(e){var t=e.value,n=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return N.push(e)},onKeyDown:j,onFocus:V,onClick:V},o,{className:(0,u.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":w===t})}),null!=n?n:t)}))),i?(0,a.cloneElement)(g.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function p(e){var t=(0,o.Z)();return a.createElement(d,(0,r.Z)({key:String(t)},e))}},3557:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(6396),l=n(8215),s=["components"],u={sidebar_position:3},c="CrossValidatorConfig",d={unversionedId:"configuring-experiments/cross-validator-config",id:"configuring-experiments/cross-validator-config",title:"CrossValidatorConfig",description:"Cross Validation is used to improve the reliability of the ranking and validation results. A CV method can be defined like so:",source:"@site/docs/configuring-experiments/cross-validator-config.mdx",sourceDirName:"configuring-experiments",slug:"/configuring-experiments/cross-validator-config",permalink:"/fseval/docs/configuring-experiments/cross-validator-config",editUrl:"https://github.com/dunnkers/fseval/tree/website/docs/configuring-experiments/cross-validator-config.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"EstimatorConfig",permalink:"/fseval/docs/configuring-experiments/estimator-config"},next:{title:"ResampleConfig",permalink:"/fseval/docs/configuring-experiments/resample-config"}},p=[{value:"Available CV methods",id:"available-cv-methods",children:[{value:"K-Fold CV",id:"k-fold-cv",children:[],level:3},{value:"Train/test split",id:"traintest-split",children:[],level:3}],level:2},{value:"\u2699\ufe0f Custom CV",id:"\ufe0f-custom-cv",children:[],level:2}],f={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"crossvalidatorconfig"},"CrossValidatorConfig"),(0,o.kt)("p",null,"Cross Validation is used to improve the reliability of the ranking and validation results. A CV method can be defined like so:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'@dataclass\nclass CrossValidatorConfig:\n    """\n    Provides an interface as how to define a Cross Validation method. The CV is applied\n    at the beginning of the pipeline, so both the ranker and validator only get to see\n    the **training** dataset. The test dataset is used for scoring, i.e. for determining\n    the validation estimator scores.\n\n    Attributes:\n        name (str): Human-friendly name for this CV method.\n        splitter (Any): The cross validation splitter function. Must be of type\n            sklearn.model_selection.BaseCrossValidator or \n            sklearn.model_selection.BaseShuffleSplit. In other words,\n            the `splitter` argument should contain a _target_ attribute which \n            instantiates to an object that has a `split` method with the following\n            signature: `def split(self, X, y=None, groups=None)`.\n        fold (int): The fold to use in this specific run of the pipeline. e.g. you\n            can use `python my_benchmark.py --multirun cv=kfold cv.splitter.n_spits=5 cv.fold=range(0,5)`\n            to run a complete 5-fold CV scheme.\n    """\n\n    name: str = MISSING\n    splitter: Any = None\n    fold: int = 0\n\n    # required for instantiation\n    _target_: str = "fseval.pipeline.cv.CrossValidator"\n')),(0,o.kt)("h2",{id:"available-cv-methods"},"Available CV methods"),(0,o.kt)("p",null,"Built-in to fseval are ",(0,o.kt)("inlineCode",{parentName:"p"},"kfold")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"train_test_split"),"."),(0,o.kt)("h3",{id:"k-fold-cv"},"K-Fold CV"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"cv=kfold")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/kfold.yaml"',title:'"conf/cv/kfold.yaml"'},"name: K-Fold\nsplitter:\n  _target_: sklearn.model_selection.KFold\n  n_splits: 5\n  shuffle: True\n  random_state: 0\n")),(0,o.kt)("p",null,"For example: to use 10-fold CV, set ",(0,o.kt)("inlineCode",{parentName:"p"},"cv.splitter.n_splits=10"),"."),(0,o.kt)("h3",{id:"traintest-split"},"Train/test split"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"cv=train_test_split")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/train_test_split.yaml"',title:'"conf/cv/train_test_split.yaml"'},"name: Train/test split\nsplitter:\n  _target_: sklearn.model_selection.ShuffleSplit\n  n_splits: 1\n  test_size: 0.25\n  random_state: 0\n")),(0,o.kt)("h2",{id:"\ufe0f-custom-cv"},"\u2699\ufe0f Custom CV"),(0,o.kt)("p",null,"For example, we can implement Leave One Out cross validation like so:"),(0,o.kt)(i.Z,{groupId:"config-representation",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"yaml",label:"YAML",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="conf/cv/loocv.yaml"',title:'"conf/cv/loocv.yaml"'},"name: Leave One Out\nsplitter:\n    _target_: sklearn.model_selection.LeaveOneOut\n"))),(0,o.kt)(l.Z,{value:"structured",label:"Structured Config",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from hydra.core.config_store import ConfigStore\n\nloocv = CrossValidatorConfig(\n    name="Leave One Out",\n    splitter=dict(\n        _target_="sklearn.model_selection.LeaveOneOut",\n    )\n)\n\ncs = ConfigStore.instance()\ncs.store(name="loocv", node=loocv, group="cv")\n')))),(0,o.kt)("p",null,"Which can then be used by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"cv=loocv")," in the commandline."))}m.isMDXComponent=!0}}]);